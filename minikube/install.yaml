---
- name: Install Minikube and Strimzi
  hosts: localhost

  vars:
    install: false
    purge: true
    strimzi:
      namespace: kafka
      version: 0.18.0

  tasks:
    - name: Install minikube on MacOS
      shell: brew install minikube
      when: ansible_system == 'Darwin' and install

#      TODO: Install minikube for Linux
#    - name: Install minikube on Linux
#      shell:
#      when: ansible_system == 'Linux' and install

    - name: Set default minikube config
      shell: |
        minikube config set cpus 4
        minikube config set disk-size 80g
        minikube config set memory 8192
      when: purge == true

    - name: Delete minikube
      shell: minikube delete
      when: purge == true

    - name: Start minikube
      shell: minikube start

    - name: Download strimzi
      get_url:
        url: https://github.com/strimzi/strimzi-kafka-operator/releases/download/{{strimzi.version}}/strimzi-{{strimzi.version}}.tar.gz
        dest: .
      tags:
        - files

    - name: Unzip strimzi
      shell: |
        gunzip -c strimzi-{{strimzi.version}}.tar.gz | tar xopf -
      tags:
        - files

    - name: Modify file (change namespace) on Linux
      shell: "sed -i 's/namespace:.*/namespace: {{strimzi.namespace}}/' strimzi-{{strimzi.version}}/install/cluster-operator/*RoleBinding*.yaml"
      when: ansible_system == 'Linux'
      tags:
        - files

    - name: Modify file (change namespace) on MacOS
      shell: |
        sed -i "" 's/namespace:.*/namespace: {{strimzi.namespace}}/' strimzi-{{strimzi.version}}/install/cluster-operator/*RoleBinding*.yaml
        exit 0
      when: ansible_system == 'Darwin'
      tags:
        - files

    - name: Delete namespace
      shell: kubectl delete ns {{strimzi.namespace}} --force --grace-period 0
      ignore_errors: yes

    - name: Create namespace
      shell: kubectl create ns {{strimzi.namespace}}

    - name: Check namespace created
      shell: kubectl get namespaces -o name
      register: create_namespace_result
      until: create_namespace_result.stdout.find("namespace/kafka") != -1
      retries: 10
      delay: 5

    - name: Create strimzi operator
      shell: |
        kubectl apply -f strimzi-{{strimzi.version}}/install/cluster-operator/ -n {{strimzi.namespace}}
        kubectl apply -f strimzi-{{strimzi.version}}/install/cluster-operator/020-RoleBinding-strimzi-cluster-operator.yaml -n {{strimzi.namespace}}
        kubectl apply -f strimzi-{{strimzi.version}}/install/cluster-operator/032-RoleBinding-strimzi-cluster-operator-topic-operator-delegation.yaml -n {{strimzi.namespace}}
        kubectl apply -f strimzi-{{strimzi.version}}/install/cluster-operator/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml -n {{strimzi.namespace}}
      tags:
        - kafka

    - name: Create kafka
      shell: |
        kubectl create -f kafka-persistent-single.yaml -n {{strimzi.namespace}}
      tags:
        - kafka

#    - name: Create connect
#        shell: |
        #        kubectl create -f kafka-connect-single-node-kafka.yaml -n {{strimzi.namespace}}
#        tags:
#          - kafka

    - name: Remove strimzi files
      file:
        path: strimzi-{{strimzi.version}}
        state: absent

    - name: Remove strimzi archive
      file:
        path: strimzi-{{strimzi.version}}.tar.gz
        state: absent

    - name: Wait for kafka cluster to be deployed
      shell: kubectl wait kafka/my-cluster --for=condition=Ready --timeout=300s -n kafka
      register: kubectl_wait
      until: kubectl_wait.stdout.find("condition met")